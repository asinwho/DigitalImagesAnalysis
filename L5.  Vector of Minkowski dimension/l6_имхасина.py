# -*- coding: utf-8 -*-
"""l6_имхасина.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N49IiWgJneTVkOUhtEQu5ZIVPqBXTTdl
"""

import numpy as np
import scipy
import cv2
import matplotlib.pyplot as plt
from google.colab.patches import cv2_imshow

def uS(img):
  k,l=img.shape
  u=np.ndarray(img.shape)
  for i in range(k-1):
    for j in range(l-1):
      u[i][j]=max(img[i][j]+1,max(img[i-1][j],img[i][j-1],img[i+1][j],img[i][j+1]))
  return u

def bS(img):
  k,l=img.shape
  b=np.ndarray(img.shape)
  for i in range(k-1):
    for j in range(l-1):
      b[i][j]=min(img[i][j]-1,min(img[i-1][j],img[i][j-1],img[i+1][j],img[i][j+1]))
  return b

def getVol(u,b):
  k,l=u.shape
  vol=0.0
  for i in range(k):
    for j in range(l):
      vol=vol+u[i][j]-b[i][j]
  return vol

def getA(vol2,vol1,beta):
  A = (vol2 - vol1) / 2
  lAlb = np.log(A) / np.log(beta)
  return lAlb

A_b=[]

def getDiv(betas):
    u_s.append(uS(u_s[-1]))
    b_s.append(bS(b_s[-1]))
    for beta in betas:
        u_s.append(uS(u_s[-1]))
        b_s.append(bS(b_s[-1]))
        vol1 = getVol(u_s[-2], b_s[-2])
        vol2 = getVol(u_s[-1], b_s[-1])
        lAlb = getA(vol2,vol1,beta)
        A_b.append(lAlb)
        yield lAlb

def getPlot(betas, Div):
  plt.figure(figsize=(10, 10))
  plt.xlabel('b')
  plt.ylabel('log(A) / log(b)')
  line, = plt.plot(betas, Div)
  l_s.append(line)
  labels.append(filename)
  plt.legend(l_s, labels)
  plt.savefig('res_5png.png')

l_s = []
labels = []
filename='5.png'
image = cv2.imread(filename)
image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
u_s = [image]
b_s = [image]
betas = [i for i in range(2, 11)]
Div = [i for i in getDiv(betas)]
getPlot(betas,Div)

A_b