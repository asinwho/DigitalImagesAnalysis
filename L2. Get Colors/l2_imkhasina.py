# -*- coding: utf-8 -*-
"""l2_imkhasina.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Nibc5_ADkuafVx8AsXGXtS8UYFPrRPRB
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
from PIL import Image
import itertools  
import matplotlib.pyplot as plt
# %matplotlib inline

def palette(img):

    arr = np.asarray(img)
    palette, index = np.unique(asvoid(arr).ravel(), return_inverse=True)
    palette = palette.view(arr.dtype).reshape(-1, arr.shape[-1])
    count = np.bincount(index)
    order = np.argsort(count)
    return palette[order[::-1]]

def asvoid(arr):
    arr = np.ascontiguousarray(arr)
    return arr.view(np.dtype((np.void, arr.dtype.itemsize * arr.shape[-1])))

FILENAME="1.jpg"
img = Image.open(FILENAME, 'r').convert('RGB')
#Три самых используемых цвета в изображении
print(palette(img)[:3])
#Для вывода палитры
(f,s,t)=palette(img)[:3]
f.tolist
s.tolist
t.tolist
palette=[f,s,t]
palette = np.array(palette)[np.newaxis, :, :]
plt.imshow(palette);
plt.axis('off');
plt.show();

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
from PIL import Image
import itertools  
import matplotlib.pyplot as plt
# %matplotlib inline
from collections import defaultdict

img = Image.open('1.jpg')
colors = img.convert('RGB').getcolors()
by_color = defaultdict(int)
for pixel in img.getdata():
  by_color[pixel] += 1
out = (dict(itertools.islice(by_color.items(), 3)))
f,s,t=(out)
print(f, s, t)
palette=[f,s,t]
palette = np.array(palette)[np.newaxis, :, :]
plt.imshow(palette);
plt.axis('off');
plt.show();